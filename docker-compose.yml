version: '3.8'

services:
  pg_honeypot:
    build: .
    container_name: pg_honeypot
    ports:
      - "5432:5432"
      - "8080:8080"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=honeypot123
      - HONEYPOT_HOST=0.0.0.0
      - HONEYPOT_PORT=8080
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres && curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: External monitoring service
  monitoring:
    image: alpine/curl:latest
    container_name: honeypot_monitoring
    depends_on:
      - pg_honeypot
    environment:
      - HONEYPOT_WEBHOOK_URL=https://your-monitoring-service.com/webhook
    volumes:
      - ./monitoring:/scripts
    command: >
      sh -c "
        echo 'Monitoring service ready';
        tail -f /dev/null
      "
    restart: unless-stopped

  # Optional: Web dashboard for viewing alerts
  dashboard:
    image: python:3.11-alpine
    container_name: honeypot_dashboard
    depends_on:
      - pg_honeypot
    ports:
      - "8090:8090"
    volumes:
      - ./dashboard:/app
      - ./logs:/app/logs:ro
    working_dir: /app
    command: ["python", "dashboard.py"]
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: honeypot_network