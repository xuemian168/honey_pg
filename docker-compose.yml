services:
  # PostgreSQL 数据库容器
  postgres:
    image: postgres:15-alpine
    container_name: honeypot_postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=honeypot123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-simple.sql:/docker-entrypoint-initdb.d/init-simple.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - honeypot_net

  # 监控服务容器（API + 转发器 + Web控制台）
  monitor:
    build:
      context: .
      dockerfile: Dockerfile.monitor
    container_name: honeypot_monitor
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - HONEYPOT_HOST=0.0.0.0
      - HONEYPOT_PORT=8080
      - DATABASE_URL=postgresql://postgres:honeypot123@postgres:5432/postgres
      - HONEYPOT_WEBHOOK_URL=${HONEYPOT_WEBHOOK_URL:-}
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - honeypot_net

volumes:
  postgres_data:
    driver: local

networks:
  honeypot_net:
    driver: bridge